{"ast":null,"code":"import _objectSpread from \"/Users/janujangathieswaran/Documents/React Tutorials/burger-builder-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/janujangathieswaran/Documents/React Tutorials/burger-builder-app/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from '../../hoc/Aux';\nimport Burger from '../../components/Burger/Burger';\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls';\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  bacon: 1.2,\n  cheese: 0.4,\n  meat: 1.3\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 4,\n      purchasable: false\n    };\n\n    this.addIngredientHandler = type => {\n      const updateCounted = this.state.ingredients[type] + 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updateCounted;\n      const newPrice = this.state.totalPrice + INGREDIENT_PRICES[type];\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      if (this.state.ingredients[type] <= 0) {\n        return;\n      }\n\n      const updateCounted = this.state.ingredients[type] - 1;\n\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = updateCounted;\n      const newPrice = this.state.totalPrice - INGREDIENT_PRICES[type];\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n  }\n\n  updatePurchaseState(ingredients) {\n    const sum = Object.keys(ingredients) //'salad', 'bacon', etc\n    .map(igKey => {\n      return ingredients[igKey]; //0, 1, 4, etc\n    }).reduce((sum, element) => {\n      return sum + element;\n    }, 0); //single element\n\n    this.setState({\n      purchasable: sum > 0\n    });\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(OrderSummary, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    })), React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      price: this.state.totalPrice,\n      purchasable: this.state.purchasable,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/Users/janujangathieswaran/Documents/React Tutorials/burger-builder-app/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","INGREDIENT_PRICES","salad","bacon","cheese","meat","BurgerBuilder","state","ingredients","totalPrice","purchasable","addIngredientHandler","type","updateCounted","updatedIngredients","newPrice","setState","updatePurchaseState","removeIngredientHandler","sum","Object","keys","map","igKey","reduce","element","render","disabledInfo","key"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport Aux from '../../hoc/Aux'\nimport Burger from '../../components/Burger/Burger'\nimport BuildControls from '../../components/Burger/BuildControls/BuildControls'\nimport Modal from '../../components/UI/Modal/Modal';\nimport OrderSummary from '../../components/Burger/OrderSummary/OrderSummary';\n\nconst INGREDIENT_PRICES = {\n    salad: 0.5,\n    bacon: 1.2,\n    cheese: 0.4,\n    meat: 1.3\n}\nclass BurgerBuilder extends Component {\n    // constructor(props){\n    //     super(props);\n    //     this.state={...};\n    // }\n    state = {\n        ingredients: {\n            salad: 0,\n            bacon: 0,\n            cheese: 0,\n            meat: 0\n        },\n        totalPrice: 4,\n        purchasable: false\n    }\n\n    updatePurchaseState(ingredients){\n        const sum = Object.keys(ingredients) //'salad', 'bacon', etc\n            .map(igKey => {\n                return ingredients[igKey]; //0, 1, 4, etc\n            })\n            .reduce((sum, element) => {\n                return sum + element;\n            },0);                           //single element\n        this.setState({purchasable: sum > 0});\n    }\n    addIngredientHandler = (type) => {\n        const updateCounted = this.state.ingredients[type] + 1;\n        const updatedIngredients = {\n          ...this.state.ingredients  \n        };\n        updatedIngredients[type] = updateCounted;\n        const newPrice = this.state.totalPrice + INGREDIENT_PRICES[type];\n        this.setState ({totalPrice: newPrice, ingredients: updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n    }\n    removeIngredientHandler = (type) => {\n        if(this.state.ingredients[type] <= 0){\n            return;\n        }\n        const updateCounted = this.state.ingredients[type] - 1;\n        const updatedIngredients = {\n            ...this.state.ingredients\n        };\n        updatedIngredients[type] = updateCounted;\n        const newPrice = this.state.totalPrice - INGREDIENT_PRICES[type];\n        this.setState ({totalPrice: newPrice, ingredients: updatedIngredients});\n        this.updatePurchaseState(updatedIngredients);\n    }\n\n    render(){\n        const disabledInfo = {\n            ...this.state.ingredients\n        };\n        for (let key in disabledInfo){\n            disabledInfo[key] = disabledInfo[key] <=0;\n        }\n        return (\n            <Aux>\n                <Modal>\n                    <OrderSummary></OrderSummary>\n                </Modal>\n                <Burger ingredients = {this.state.ingredients}/>\n                <BuildControls \n                    ingredientAdded={this.addIngredientHandler}\n                    ingredientRemoved={this.removeIngredientHandler}\n                    disabled={disabledInfo}\n                    price={this.state.totalPrice}\n                    purchasable={this.state.purchasable}/>\n            </Aux>\n        );\n    }\n}\n\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}